name: Build firehose version
run-name: ${{ inputs.dryrun && '[dryrun] ' || ''}}Creating p-${{ inputs.tag }}-fh <> cosmos/${{ inputs.tag }}..graphprotocol/${{inputs.fh-tag}}

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        required: true
        description: 'cosmos/cosmos-sdk tag name'
      fh-tag:
        type: string
        required: true
        description: 'graphprotocol/cosmos-sdk firehose tag name'
      dryrun:
        type: boolean
        required: false
        default: false
  # This workflow was first run using push event
  # To make it available in the github workflow list
  # https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo#:~:text=Specifically%20for%20workflow_dispatch,at%2016%3A32
  # push:
  #   branches:
  #     - ajeet/fh-workflow

env:
  P_TAG: p-${{ inputs.tag }}-fh

jobs:
  cosmos-sdk-fh:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ github.token }}

      - name: add remotes
        run: |
          git remote add cosmos https://github.com/cosmos/cosmos-sdk.git
          git remote add gp https://github.com/graphprotocol/cosmos-sdk.git

      - name: fetch tags
        run: |
          git fetch cosmos refs/tags/${{ inputs.tag }}:refs/tags/cosmos_${{ inputs.tag }} --no-tags
          git fetch gp refs/tags/${{ inputs.fh-tag }}:refs/tags/gp_${{ inputs.fh-tag }} --no-tags
          git fetch origin 'refs/tags/${{ env.P_TAG }}:refs/tags/${{ env.P_TAG }}' || echo ""
          echo "tags=$(git tag -l | tr '\n' ' ')" >> $GITHUB_ENV

      - if: contains(env.tags, env.P_TAG)
        name: exit if tag already exists
        run: |
          echo "::error::Tag: $P_TAG already exists"
          exit 1

      - name: print commit diff
        run: echo "::notice title=Commit diff::$(git log cosmos_${{ inputs.tag }}..gp_${{ inputs.fh-tag }} --pretty='%h | %s [%an]')"

      - if: '!inputs.dryrun'
        name: set git config
        run: git config user.name "${{ github.actor }}"

      - if: '!inputs.dryrun'
        id: fetch_commits
        name: 'fetch commits'
        run: echo "commits=$(git log cosmos_${{ inputs.tag }}..gp_${{ inputs.fh-tag }} --pretty="%H" --reverse | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - if: '!inputs.dryrun'
        name: 'apply commits and create new tag'
        run: |
          git checkout cosmos_${{ inputs.tag }}
          if [[ '${{ steps.fetch_commits.outputs.commits }}' != '' ]]; then
            git cherry-pick ${{ steps.fetch_commits.outputs.commits }}
          else
            echo "::warning title=No commit diff::No commit difference b/w tags; pushing tag ${{ env.P_TAG }} which is identical to cosmos/${{ inputs.tag }}"
          fi
          git tag ${{ env.P_TAG }}
          git push origin refs/tags/${{ env.P_TAG }}
          
      - if: failure() && !inputs.dryrun && !contains(env.tags, env.P_TAG)
        name: 'print manual steps'
        run: |
          STEPS=$(cat << EOF
          => Add remotes
          > git remote add cosmos https://github.com/cosmos/cosmos-sdk.git
          > git remote add gp https://github.com/graphprotocol/cosmos-sdk.git
          
          => Fetch tags
          > git fetch cosmos refs/tags/${{ inputs.tag }}:refs/tags/cosmos_${{ inputs.tag }} --no-tags
          > git fetch gp refs/tags/${{ inputs.fh-tag }}:refs/tags/gp_${{ inputs.fh-tag }} --no-tags
          
          => Check commit diff
          > git log cosmos_${{ inputs.tag }}..gp_${{ inputs.fh-tag }} --pretty='%h | %s [%an]'
          
          => Apply commits and create new tag
          > git checkout cosmos_${{ inputs.tag }}
          > git cherry-pick $(git log cosmos_${{ inputs.tag }}..gp_${{ inputs.fh-tag }} --pretty="%H" --reverse | tr '\n' ' ')
          > git tag ${{ env.P_TAG }}
          > git push origin refs/tags/${{ env.P_TAG }}
          EOF
          )
          STEPS="${STEPS//'%'/'%25'}"
          STEPS="${STEPS//$'\n'/'%0A'}"
          STEPS="${STEPS//$'\r'/'%0D'}"
          echo "::notice title=Manually do it?::$STEPS"
          